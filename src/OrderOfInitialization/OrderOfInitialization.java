package OrderOfInitialization;
/*Демонстрация того, что поля класса инициализируются до выполнения конструктора, даже
* если в тексте программы объявление поля идёт после конструктора.*/
class Window{
    Window(int marker){
        //Сигнал о срабатывании конструктора
        System.out.println("Сработал конструктор класса Window, создан объект Window с параметром " + marker);
    }
}
class House{
    /*Объявление ссылочной переменной (поля класса) с одновременной инициализацией.
    * Инстанцирование класса по определению приводит к созданию его полей в именованной
     *области памяти, называемой объектом (состояние - неотъемлемая характеристика объекта).
     *Объявление и инициализация поля до конструктора класса House, момент
     *инициализации будет обозначен сообщением от конструктора класса Window.*/
    Window window = new Window(1);
    House(){
        //Сигнал о срабатывании конструктора
        System.out.println("Сработал конструктор класса House.");
        /*Повторная инициализация внутри конструктора поля window класса House. Момент
        инициализации будет обозначен сообщением от конструктора класса Window.*/
        window = new Window(33);
    }
    /*Объявление и инициализация ещё одного поля класса, уже после конструктора, момент
     *инициализации будет обозначен сообщением от конструктора класса Window.*/
    Window window2 = new Window(2);
}
public class OrderOfInitialization {
    public static void main(String[] args) {
        House house = new House();
    }
}
